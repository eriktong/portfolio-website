name: Deploy to GitHub Pages
on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Detect project
        id: detect
        run: |
          if [ -f package.json ]; then echo "node=true" >> $GITHUB_OUTPUT; else echo "node=false" >> $GITHUB_OUTPUT; fi
          if [ -f package.json ]; then
            if jq -e '.dependencies.vite or .devDependencies.vite' package.json >/dev/null; then echo "builder=vite" >> $GITHUB_OUTPUT; fi
            if jq -e '.dependencies["react-scripts"] or .devDependencies["react-scripts"]' package.json >/dev/null; then echo "builder=cra" >> $GITHUB_OUTPUT; fi
          fi
          for d in dist build docs public . ; do
            if [ -d "$d" ]; then echo "dir=$d" >> $GITHUB_OUTPUT; break; fi
          done

      - if: steps.detect.outputs.node == 'true'
        name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - if: steps.detect.outputs.node == 'true'
        name: Install deps
        run: npm ci

      - if: steps.detect.outputs.builder == 'vite'
        name: Build (Vite)
        run: npm run build -- --base="/${{ github.event.repository.name }}/"

      - if: steps.detect.outputs.builder == 'cra'
        name: Build (CRA)
        run: |
          PUBLIC_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" \
          npm run build

      - name: Compute output dir
        id: out
        run: |
          if [ -d dist ]; then echo "out=dist" >> $GITHUB_OUTPUT; \
          elif [ -d build ]; then echo "out=build" >> $GITHUB_OUTPUT; \
          elif [ -d docs ]; then echo "out=docs" >> $GITHUB_OUTPUT; \
          elif [ -d public ]; then echo "out=public" >> $GITHUB_OUTPUT; \
          else echo "out=." >> $GITHUB_OUTPUT; fi

      - name: SPA fallback (404.html)
        run: |
          OUT="${{ steps.out.outputs.out }}"
          if [ -f "$OUT/index.html" ]; then cp "$OUT/index.html" "$OUT/404.html" || true; fi

      - name: Configure Pages (enable if needed)
        uses: actions/configure-pages@v5
        with:
          enablement: true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.out.outputs.out }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
